# process this file with autoconf to get a configure script
AC_PREREQ([2.6.0])
AC_INIT([libdc1394],[2.0.2],[libdc1394-devel@lists.sf.net])
AC_CONFIG_SRCDIR([dc1394/control.c])

case "$host" in
*-*-cygwin* | *-*-mingw*)
AC_LIBTOOL_WIN32_DLL
;;
esac

#
DX_HTML_FEATURE(OFF)
DX_CHM_FEATURE(OFF)
DX_CHI_FEATURE(OFF)
DX_MAN_FEATURE(OFF)
DX_RTF_FEATURE(OFF)
DX_XML_FEATURE(OFF)
DX_PDF_FEATURE(OFF)
DX_PS_FEATURE(OFF)
#
DX_INIT_DOXYGEN([libdc1394], [Doxyfile.in])
#
AM_INIT_AUTOMAKE([--warnings=all 1.9.6])
AC_CONFIG_HEADERS([config.h])

AC_PROG_CC
AC_PROG_LIBTOOL
AM_PROG_CC_C_O

# check if the 'restrict' prefix is supported
AC_C_RESTRICT

AC_CHECK_LIB(m, pow, [ LIBS="-lm $LIBS" ], [])

AC_ARG_WITH(juju-dir,[AS_HELP_STRING([--with-juju-dir=<dir>],[Path to juju include files])])
if ! test -z "$with_juju_dir" ; then
   JUJU_DIR="$with_juju_dir"
   dc1394platform=juju
   AC_SUBST(JUJU_DIR)
else
  case "$host" in
  *-*-linux*)
    # Check for the new version of libraw1394 first since they might have both
    # installed and we want to use the newest version
    AC_CHECK_LIB(raw1394, raw1394_channel_modify,
       [AC_DEFINE(HAVE_LIBRAW1394,[],[Defined if libraw1394 is present]) raw1394=true LIBS="$LIBS -lraw1394";break],
        AC_MSG_ERROR(libraw1394 not found or too old. Please upgrade to 1.2.0 or a more recent version.))
    dc1394platform=linux
    ;;
  *-*-darwin*)
    AC_CHECK_LIB(IOKit, IOMasterPort,
       [AC_DEFINE(HAVE_IOKITLIB,[],[Defined if IOKitLib is present]) iokit=true],
       [AC_MSG_ERROR(IOKitLib not found.)])
    dc1394platform=macosx
    ;;
  *-*-cygwin* | *-*-mingw*)
    AC_ARG_WITH(winddk,[AS_HELP_STRING([--with-winddk=<dir>],[Path to WINDDK root dir (default: c:/WINDDK/2600.1106)])],["c:/WINDDK/2600.1106"])
    WINDDK="$with_winddk"
    AC_SUBST(WINDDK)
    dc1394platform=msw
	platform_LDFLAGS="-Wl,--export-all -no-undefined -lsetupapi -lws2_32"
        platform_CFLAGS="-DDC1394_DLL_EXPORTS -include \${top_srcdir}/dc1394/msw/compat.h"
	AC_SUBST(platform_LDFLAGS)
    ;;
  esac
fi
AM_CONDITIONAL(USE_LINUX, test x$raw1394 = xtrue)
AM_CONDITIONAL(USE_MACOSX, test x$iokit = xtrue)
AC_SUBST(dc1394platform)

# check for Xv extensions (necessary for examples/dc1394_multiview)
# imported from Coriander
AC_DEFUN([AC_CHECK_XV],[
	AC_SUBST(XV_CFLAGS)
	AC_SUBST(XV_LIBS)
	AC_MSG_CHECKING(for Xv extensions)
	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
	#include <X11/Xlib.h>
 	#include <X11/extensions/Xvlib.h>]], [[
	int main(void) { (void) XvGetPortAttribute(0, 0, 0, 0); return 0; }
	]])],[xv=yes],[xv=no]);
	AC_MSG_RESULT($xv)
 	if test x$xv = xyes; then
           XV_LIBS="-lXv -lXext"
           XV_CFLAGS=""
	   AC_DEFINE(HAVE_XV,1,[defined if XV video overlay is available])
 	fi
        AM_CONDITIONAL(XVOK, test x$xv = xyes)
])
AC_CHECK_XV

AC_HEADER_STDC
AC_CHECK_HEADERS(stdint.h fcntl.h sys/ioctl.h unistd.h sys/mman.h netinet/in.h)
AC_PATH_XTRA

AC_TYPE_SIZE_T

AC_FUNC_MMAP

dnl ---------------------------------------------------------------------------
dnl When making a release:
dnl  1. If the library source code has changed at all since the last release,
dnl     then increment REVISION.
dnl  2. If the interface (ABI) has been modified since the last release,
dnl     increment CURRENT, and set REVISION to 0.
dnl  3. If the interface changes consist solely of additions, increment AGE.
dnl  4. If the interface has removed or changed elements, set AGE to 0.
dnl ---------------------------------------------------------------------------
lt_current=23
lt_revision=0
lt_age=1

AC_SUBST(lt_current)
AC_SUBST(lt_revision)
AC_SUBST(lt_age)

pkgincludedir='$(includedir)/dc1394'
AC_SUBST(pkgincludedir)

dnl AX_CFLAGS_WARN_ALL(CFLAGS)
CFLAGS="$CFLAGS -Wall -Wunused -std=gnu99"
dnl for pedantic compilation, try to add "-pedantic" to the above string

AC_CONFIG_FILES([ \
    Makefile \
    libdc1394-2.pc \
    dc1394/Makefile \
    dc1394/linux/Makefile \
    dc1394/juju/Makefile \
    dc1394/macosx/Makefile \
    dc1394/msw/Makefile \
    dc1394/vendor/Makefile \
    examples/Makefile \
])
AC_OUTPUT
